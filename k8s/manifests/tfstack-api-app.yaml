---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tfstack-api-app-ingress
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: tfstack-api-app
                port:
                  number: 8080

---
apiVersion: v1
kind: Service
metadata:
  namespace: "default"
  name: tfstack-api-app
spec:
  #type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: tfstack-api-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "default"
  name: tfstack-api-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tfstack-api-app
  template:
    metadata:
      labels:
        app: tfstack-api-app
    spec:
      containers:
        - name: tfstack-api-app
          image: elmoenco/tfstack-api-app:latest # We're not using image tag versions, only latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: CELERY_BROKER_URL
              value: redis://redis:6379
            - name: CELERY_RESULT_BACKEND
              value: redis://redis:6379
          volumeMounts:
            - name: aws-credentials
              mountPath: "/root/.aws" # will create a file called credentials
              readOnly: true
      volumes:
        - name: aws-credentials
          secret:
            secretName: aws-credentials
