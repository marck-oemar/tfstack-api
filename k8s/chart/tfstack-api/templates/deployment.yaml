apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tfstack-api.fullname" . }}-redis
  labels:
  {{- include "tfstack-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app: redis
    {{- include "tfstack-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: redis
      {{- include "tfstack-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: {{ .Values.image.redis.repository }}:{{ .Values.image.redis.tag | default
          .Chart.AppVersion }}
        imagePullPolicy: Always
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tfstack-api.fullname" . }}-app
  labels:
  {{- include "tfstack-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: tfstack-api-app
    {{- include "tfstack-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: tfstack-api-app
      {{- include "tfstack-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: CELERY_BROKER_URL
          value: redis://redis:6379
        - name: CELERY_RESULT_BACKEND
          value: redis://redis:6379
        image: {{ .Values.image.tfstackApiApp.repository }}:{{ .Values.image.tfstackApiApp.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: tfstack-api-app
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /root/.aws
          name: aws-credentials
          readOnly: true
      volumes:
      - name: aws-credentials
        secret:
          secretName: aws-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tfstack-api.fullname" . }}-worker
  labels:
  {{- include "tfstack-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: tfstack-api-worker
    {{- include "tfstack-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: tfstack-api-worker
      {{- include "tfstack-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: CELERY_BROKER_URL
          value: redis://redis:6379
        - name: CELERY_RESULT_BACKEND
          value: redis://redis:6379
        - name: WORKER_CONCURRENCY
          value: "5"
        image: {{ .Values.image.tfstackApiWorker.repository }}:{{ .Values.image.tfstackApiWorker.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: tfstack-api-worker
        resources: {}
        volumeMounts:
        - mountPath: /root/.aws
          name: aws-credentials
          readOnly: true
      volumes:
      - name: aws-credentials
        secret:
          secretName: aws-credentials